{"version":3,"sources":["components/Loading.module.css","components/MovieCard.module.css","actions/types.js","reducers/common.js","reducers/search.js","reducers/index.js","reducers/listsByType.js","reducers/detailsByKey.js","configureStore.js","configs/index.js","apis/index.js","configs/routes.js","components/Header.js","components/PageContainer.js","actions/index.js","components/Loading.js","hocs/withLoading.js","components/Carousel.js","components/MovieCard.js","components/MovieCarousel.js","containers/MovieCarouselContainer.js","screens/Home.js","components/Player.js","components/ErrorFullScreen.js","components/Detail.js","containers/DetailContainer.js","screens/Details.js","components/Search.js","containers/SearchContainer.js","screens/Search.js","screens/NotFound.js","components/App.js","containers/AppContainer.js","index.js"],"names":["module","exports","loading","card","LIST_REFRESH","LIST_LOAD","LIST_LOAD_OK","LIST_LOAD_KO","DETAIL_REFRESH","DETAIL_LOAD","DETAIL_LOAD_OK","DETAIL_LOAD_KO","defaultState","configuration","error","query","results","combineReducers","common","state","arguments","length","undefined","action","type","Object","objectSpread","payload","listsByType","defineProperty","listType","refresh","items","list","detailsByKey","detailKey","item","detail","search","middlewares","thunkMiddleware","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","apply","baseConfig","_ok","environment","config","Proxy","get","obj","prop","envKeyName","toUpperCase","process","APIKEY","TMDB_APIKEY","IMSECURE","window","location","protocol","apiKeyPlugin","req","api_key","request","url","params","superagent","concat","use","Movies","popular","discoverByGenre","genreId","with_genres","details","id","Series","Lists","byTypeOptions","options","LIST_TYPES","POPULAR_MOVIES","POPULAR_SERIES","MOVIES_GENRE","genre","SERIES_GENRE","Error","Details","byType","itemType","ITEM_TYPES","MOVIE","TV","GENRES_MOVIE","movieFormatter","title","poster_path","seriesFormatter","name","IMAGE_POSTER_SIZES","makeImageUrl","imageUrl","size","configurationResponse","baseUrl","getPaginatedResult","response","getSearchResult","reduce","acc","current","media_type","toConsumableArray","api","Common","Search","multi","BASEPATH","routes","HOME","DETAILMOVIE","DETAILTV","SEARCH","SEARCHKEYWORD","Header","props","react_default","a","createElement","Navbar_default","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav_default","className","PageContainer","children","containerClassName","rowClassName","Fragment","components_Header","Container_default","Row_default","Col_default","defaultProps","configurationLoad","configurationLoadFinish","configurationLoadError","fetchConfigurationIfNeeded","dispatch","getState","then","result","body","listLoad","listOptions","types","getListKey","listLoadFinish","listLoadError","optionsKey","keys","sort","map","k","join","toUpper","fetchListIfNeeded","typeKey","shouldLoadList","fetchList","getDetailKey","detailLoad","detailLoadFinish","detailLoadError","fetchDetailIfNeeded","shouldLoadDetail","fetchDetail","searchLoad","searchLoadFinish","searchLoadError","Loading","mx","color","styleColor","borderColor","styles","style","marginTop","marginBottom","withLoading","isLoadingFunc","LoadingComponent","DefaultLoadingComponent","Component","Carousel","react_alice_carousel_default","responsive","0","600","1200","autoPlayInterval","autoPlayDirection","fadeOutAnimation","mouseDragEnabled","dotsDisabled","buttonsDisabled","MovieCard","history","Card_default","onClick","e","push","replace","getRouteForDetail","Img","src","alt","ImgOverlay","Title","withRouter","MovieCarousel","configurationTmdb","MoviCardsItems","components_MovieCard","assign","components_Carousel","MovieCarouselContainerBase","this","onLoad","components_MovieCarousel","React","MovieCarouselContainer","compose","connect","ownProps","listKey","listState","formatter","getListItemFormatter","propTypes","PropTypes","string","isRequired","oneOf","object","Home","components_PageContainer","containers_MovieCarouselContainer","onErrorEvent","event","onError","console","code","Player","videoUrl","width","useEffect","shaka","polyfill","installAll","isBrowserSupported","playerId","video","document","getElementById","player","addEventListener","load","log","requestFullscreen","catch","initPlayer","ResponsiveEmbed_default","aspect","poster","controls","autoPlay","ErrorFullScreen","message","md","formaterByType","_formaterByType","_ref","overview","vote_average","popularity","genres","image","description","meta","vote","_ref2","Detail","_React$useState","useState","_React$useState2","slicedToArray","playerVisible","setPlayerVisible","src_components_ErrorFullScreen","_ref3","Modal_default","show","onHide","closeButton","Body","components_Player","Footer","Button_default","variant","metaKey","index","key","block","preventDefault","Image_default","thumbnail","DetailContainerBase","components_Detail","getItemTypeFromProps","isTv","isMovie","DetailContainer","detailState","bool","match","containers_DetailContainer","keyword","fetchSearch","searchValue","setSearchValue","filter","Form_default","onSubmit","Row","sm","Control","autoFocus","placeholder","value","onChange","target","disabled","isEmpty","Spinner_default","animation","role","aria-hidden","CardColumns_default","SearchContainer","searchState","containers_SearchContainer","NotFound","_props$location","pathname","App","react_router_dom","react_router","exact","path","component","render","screens_Details","AppContainer","_this$props","components_App","store","ReactDOM","es","containers_AppContainer"],"mappings":"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","file":"static/js/main.2a01e494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2xAve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__MkDsz\"};","export const APP_LOAD = \"APP_LOAD\"\n\nexport const CONFIGURATION_LOAD = \"CONFIGURATION_LOAD\"\nexport const CONFIGURATION_LOAD_OK = \"CONFIGURATION_LOAD_OK\"\nexport const CONFIGURATION_LOAD_KO = \"CONFIGURATION_LOAD_KO\"\n\nexport const LIST_REFRESH = \"LIST_REFRESH\"\nexport const LIST_LOAD = \"LIST_LOAD\"\nexport const LIST_LOAD_OK = \"LIST_LOAD_OK\"\nexport const LIST_LOAD_KO = \"LIST_LOAD_KO\"\n\nexport const DETAIL_REFRESH = \"DETAIL_REFRESH\"\nexport const DETAIL_LOAD = \"DETAIL_LOAD\"\nexport const DETAIL_LOAD_OK = \"DETAIL_LOAD_OK\"\nexport const DETAIL_LOAD_KO = \"DETAIL_LOAD_KO\"\n\nexport const SEARCH_LOAD = \"SEARCH_LOAD\"\nexport const SEARCH_LOAD_OK = \"SEARCH_LOAD_OK\"\nexport const SEARCH_LOAD_KO = \"SEARCH_LOAD_KO\"","import {\n  CONFIGURATION_LOAD,\n  CONFIGURATION_LOAD_OK,\n  CONFIGURATION_LOAD_KO\n} from '../actions/types';\n\nconst defaultState = {\n  configuration: null,\n  loading: false,\n  error: false,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case CONFIGURATION_LOAD:\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    case CONFIGURATION_LOAD_OK:\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        configuration: action.payload\n      };\n    case CONFIGURATION_LOAD_KO:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  SEARCH_LOAD,\n  SEARCH_LOAD_OK,\n  SEARCH_LOAD_KO\n} from '../actions/types';\n\nconst defaultState = {\n  query: \"\",\n  results: null,\n  loading: false,\n  error: false,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SEARCH_LOAD:\n      return {\n        ...state,\n        error: false,\n        loading: true,\n        query: action.payload,\n      };\n    case SEARCH_LOAD_OK:\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        results: action.payload\n      };\n    case SEARCH_LOAD_KO:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport common from './common'\nimport listsByType from './listsByType'\nimport detailsByKey from './detailsByKey'\nimport search from './search'\n\nexport default combineReducers({\n  common,\n  listsByType,\n  detailsByKey,\n  search,\n})","import {\n  LIST_LOAD,\n  LIST_LOAD_OK,\n  LIST_LOAD_KO,\n  LIST_REFRESH,\n} from '../actions/types';\n\n\nfunction list(\n  state = {\n    loading: false,\n    error: false,\n    refresh: false,\n    items: []\n  },\n  action\n) {\n  switch (action.type) {\n    case LIST_REFRESH:\n      return {\n        ...state,\n        refresh: true,\n      }\n    case LIST_LOAD:\n      return {\n        ...state,\n        refresh: false,\n        loading: true,\n        error: false,\n      }\n    case LIST_LOAD_OK:\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      }\n    case LIST_LOAD_KO:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default function listsByType(state = {}, action) {\n  switch (action.type) {\n    case LIST_REFRESH:\n    case LIST_LOAD:\n    case LIST_LOAD_OK:\n    case LIST_LOAD_KO:\n      return {\n        ...state,\n        [action.listType]: list(\n          state[action.listType],\n          action\n        )\n      }\n    default:\n      return state\n  }\n}\n","import {\n  DETAIL_LOAD,\n  DETAIL_LOAD_OK,\n  DETAIL_LOAD_KO,\n  DETAIL_REFRESH,\n} from '../actions/types';\n\n\nfunction detail(\n  state = {\n    loading: false,\n    error: false,\n    refresh: false,\n    item: {}\n  },\n  action\n) {\n  switch (action.type) {\n    case DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: true,\n      }\n    case DETAIL_LOAD:\n      return {\n        ...state,\n        refresh: false,\n        loading: true,\n        error: false,\n      }\n    case DETAIL_LOAD_OK:\n      return {\n        ...state,\n        loading: false,\n        item: action.payload,\n      }\n    case DETAIL_LOAD_KO:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default function detailsByKey(state = {}, action) {\n  switch (action.type) {\n    case DETAIL_REFRESH:\n    case DETAIL_LOAD:\n    case DETAIL_LOAD_OK:\n    case DETAIL_LOAD_KO:\n      return {\n        ...state,\n        [action.detailKey]: detail(\n          state[action.detailKey],\n          action\n        )\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from './reducers'\n\n\nconst middlewares = [\n  thunkMiddleware\n];\n\n// use logger only on development\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger');\n\n  middlewares.push(logger);\n}\n\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, applyMiddleware(...middlewares))\n}\n\nexport default configureStore","/* eslint no-template-curly-in-string: 0 */\n\nconst baseConfig = {\n  _ok: 'ok', // for unittest\n  environment: 'dev'\n};\n\nconst handler = {\n  get: (obj, prop) => {\n    if (!prop) {\n      return;\n    }\n\n    const envKeyName = 'REACT_APP_' + prop.toUpperCase();\n    if (envKeyName in process.env) {\n      return process.env[envKeyName];\n    }\n\n    if (prop in baseConfig) {\n      return baseConfig[prop];\n    }\n\n    return;\n  }\n};\n\n\n/**\n* @type {Object<string, any>} Config\n* @property {string} TMDB_APIKEY apikey for the project.\n*/\n\n/**\n* @type {Config} environment based configuration\n*/\nconst config = new Proxy(baseConfig, handler);\n\nexport default config;\n","import get from 'lodash/get'\nimport superagent from 'superagent'\n\nimport config from \"../configs\";\n\nconst API_BASEURL = \"https://api.themoviedb.org/3\"\n\nconst APIKEY = config.TMDB_APIKEY\n\nconst IMSECURE = window.location.protocol === 'http:'\n\nconst apiKeyPlugin = req => {\n  req.query({ api_key: APIKEY })\n}\n\nconst request = {\n  get: (url, params = {}) => superagent.get(`${API_BASEURL}${url}`).query(params).use(apiKeyPlugin)\n}\n\nconst Common = {\n  configuration: () => request.get(\"/configuration\")\n}\n\nconst Movies = {\n  popular: () => request.get(\"/movie/popular\"),\n  discoverByGenre: (genreId) => request.get(\"/discover/movie\", {with_genres: genreId}),\n  details: (id) => request.get(`/movie/${id}`)\n}\n\nconst Series = {\n  popular: () => request.get(\"/tv/popular\"),\n  discoverByGenre: (genreId) => request.get(\"/discover/tv\", {with_genres: genreId}),\n  details: (id) => request.get(`/tv/${id}`)\n}\n\nconst Lists = {\n  byTypeOptions: (type, options) => {\n    switch(type) {\n      case LIST_TYPES.POPULAR_MOVIES:\n        return Movies.popular()\n      case LIST_TYPES.POPULAR_SERIES:\n        return Series.popular()\n      case LIST_TYPES.MOVIES_GENRE:\n        return Movies.discoverByGenre(options.genre)\n      case LIST_TYPES.SERIES_GENRE:\n        return Series.discoverByGenre(options.genre)\n      default:\n        throw new Error(`unknown list type: ${type}`)\n    }\n  }\n}\n\nconst Details = {\n  byType: (itemType, id) => {\n    switch(itemType) {\n      case ITEM_TYPES.MOVIE:\n        return Movies.details(id)\n      case ITEM_TYPES.TV:\n        return Series.details(id)\n      default:\n      debugger\n        throw new Error(`unknown item type: ${itemType}`)\n    }\n  }\n}\n\nconst Search = {\n  multi: (query) => request.get(\"/search/multi\", {query})\n}\n\nconst api = {\n  Common,\n  Movies,\n  Series,\n  Lists,\n  Details,\n  Search,\n}\n\nexport const LIST_TYPES = {\n  POPULAR_MOVIES: \"POPULAR_MOVIES\",\n  POPULAR_SERIES: \"POPULAR_SERIES\",\n  MOVIES_GENRE: \"MOVIES_GENRE\",\n  SERIES_GENRE: \"SERIES_GENRE\",\n}\n\n// https://developers.themoviedb.org/3/genres/get-movie-list\nexport const GENRES_MOVIE = {\n  Family: 10751,\n  Documentary: 99\n}\n\nexport const ITEM_TYPES = {\n  MOVIE: 'MOVIE',\n  TV: 'TV'\n}\n\nconst movieFormatter = (item) => {\n  return {\n    id: item.id,\n    title: item.title,\n    poster_path: item.poster_path,\n    itemType: ITEM_TYPES.MOVIE\n  }\n}\n\nconst seriesFormatter = (item) => {\n  return {\n    id: item.id,    \n    title: item.name,\n    poster_path: item.poster_path,\n    itemType: ITEM_TYPES.TV\n  }\n}\n\nexport const getListItemFormatter = (listType) => {\n  switch(listType) {\n    case LIST_TYPES.POPULAR_SERIES:\n    case LIST_TYPES.SERIES_GENRE:\n      return seriesFormatter\n    default:\n      return movieFormatter\n  }\n}\n\nexport const IMAGE_POSTER_SIZES = {\n  xs: 'w92',\n  sm: 'w154',\n  md: 'w342',\n  lg: 'w500',\n  xl: 'w780',\n}\n\nexport const makeImageUrl = (imageUrl, size, configurationResponse) => {\n  const baseUrl = get(configurationResponse, IMSECURE ? 'images.secure_base_url' : 'images.base_url', \"\")\n  return `${baseUrl}${size}${imageUrl}`\n}\n\n/**\n * \n * @param {Object} response - a paginated api response\n * @returns {Array} results not formatted\n */\nexport const getPaginatedResult = response => {\n  return response.results\n}\n\n/**\n * \n * @param {Object} response - search api response\n * @returns {Array} results formatted\n */\nexport const getSearchResult = response => {\n  // format all results with proper formatter and ignore\n  //   media_type not relevant\n  return response.results.reduce((acc, current) => {\n    const {media_type} = current\n    switch (media_type) {\n      case \"movie\":\n        return [\n          ...acc,\n          movieFormatter(current)\n        ]\n      case \"tv\":\n        return [\n          ...acc,\n          seriesFormatter(current)\n        ]\n      default:\n        return acc\n    }\n  }, [])\n}\n\n// export const MOCK_VIDEO_URL = \"//bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\nexport const MOCK_VIDEO_URL = \"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\"\nexport const MOCK_VIDEO_URL_SECURE = \"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\n\nexport default api","import { ITEM_TYPES } from \"../apis\";\nconst BASEPATH = `/react-tmdb-player`\n\nconst routes = {\n  HOME: `${BASEPATH}/`,\n  DETAILMOVIE: `${BASEPATH}/movie/:id`,\n  DETAILTV: `${BASEPATH}/tv/:id`,\n  SEARCH: `${BASEPATH}/search/`,\n  SEARCHKEYWORD: `${BASEPATH}/search/:keyword`,\n}\n\nexport const getRouteForDetail = (id, itemType) => {\n  switch (itemType) {\n    case ITEM_TYPES.TV:\n      return routes.DETAILTV.replace(`:id`, id)\n    case ITEM_TYPES.MOVIE:\n    default:\n      return routes.DETAILMOVIE.replace(`:id`, id)\n    \n  }\n}\n\nexport default routes","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport {Link} from 'react-router-dom'\nimport routes from '../configs/routes';\n\nconst Header = props => {\n  return (\n    <Navbar bg=\"light\" expand=\"sm\">\n      <Navbar.Brand as={Link} to={routes.HOME}>Home</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link as={Link} to={routes.SEARCH}>Search</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport PropTypes from 'prop-types'\n\nimport Header from './Header';\n\n\nconst PageContainer = props => {\n  const {\n    children,\n    containerClassName,\n    rowClassName,\n  } = props\n  return (\n    <>\n      <Header />\n\n      <Container className={containerClassName}>\n        <Row className={rowClassName}>\n          <Col>\n            {children}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nPageContainer.defaultProps = {\n  containerClassName: \"\",\n  rowClassName: \"\"\n}\n\nPageContainer.propTypes = {\n  /** className assigned to container */\n  containerClassName: PropTypes.string,\n  \n  /** className assigned to row */\n  rowClassName: PropTypes.string,\n}\n\nexport default PageContainer\n","import toUpper from 'lodash/toUpper'\n\nimport * as types from './types'\nimport api, { getPaginatedResult, getSearchResult } from '../apis';\n\n// configuration action creators\nconst configurationLoad = () => ({\n  type: types.CONFIGURATION_LOAD,\n})\n\nconst configurationLoadFinish = (payload) => ({\n  type: types.CONFIGURATION_LOAD_OK,\n  payload\n})\n\nconst configurationLoadError = () => ({\n  type: types.CONFIGURATION_LOAD_KO,\n})\n\n\nfunction fetchConfiguration() {\n  return dispatch => {\n    dispatch(configurationLoad())\n    return api.Common.configuration()\n      .then(response => {\n        const result = response.body\n        dispatch(configurationLoadFinish(result))\n      }, error => {\n        dispatch(configurationLoadError())\n      })\n  }\n}\n\n// FIXME add caching on localstorage\nfunction shouldLoadConfiguration(state) {\n  // const stItem = localstorage.get(\"cachekey\")\n  if (!state.configuration) {\n    return true\n  } else if (state.loading) {\n    return false\n  }\n  return true\n}\n\nexport function fetchConfigurationIfNeeded() {\n  return (dispatch, getState) => {\n    if (shouldLoadConfiguration(getState())) {\n      return dispatch(fetchConfiguration())\n    }\n  }\n}\n\n// list action creators\nconst listLoad = (listType, listOptions) => ({\n  type: types.LIST_LOAD,\n  listType: getListKey(listType, listOptions)\n})\n\nconst listLoadFinish = (listType, listOptions, payload) => ({\n  type: types.LIST_LOAD_OK,\n  listType: getListKey(listType, listOptions),\n  payload\n})\n\nconst listLoadError = (listType, listOptions) => ({\n  type: types.LIST_LOAD_KO,\n  listType: getListKey(listType, listOptions)\n})\n\n\n/**\n * Calculate the list key based on type and parameters\n * \n * @param {String} type \n * @param {Object} options \n * \n * @returns {String} list key to be used in reducers\n */\nexport const getListKey = (type, options = {}) => {\n  const optionsKey = Object.keys(options)\n    .sort()\n    .map(k => `${k}_${options[k]}`)\n    .join(\"_\")\n  \n  return toUpper(`${type}_${optionsKey}`)\n}\n\n\nfunction fetchList(listType, listOptions) {\n  return dispatch => {\n    dispatch(listLoad(listType, listOptions))\n    return api.Lists.byTypeOptions(listType, listOptions)\n      .then(response => {\n        const result = getPaginatedResult(response.body)\n        dispatch(listLoadFinish(listType, listOptions, result))\n      }, error => {\n        dispatch(listLoadError(listType, listOptions))\n      })\n  }\n}\n\nfunction shouldLoadList(state, listType, listOptions) {\n  const typeKey = getListKey(listType, listOptions)\n  const list = state.listsByType[typeKey]\n  if (!list) {\n    return true\n  } else if (list.refresh) {\n    return true\n  } else if (list.error) {\n    return true\n  }\n  return false\n}\n\nexport function fetchListIfNeeded(listType, listOptions = {}) {\n  return (dispatch, getState) => {\n    if (shouldLoadList(getState(), listType, listOptions)) {\n      return dispatch(fetchList(listType, listOptions))\n    }\n  }\n}\n\n/**\n * Calculate the detail key based on type and id\n * \n * @param {String} itemType api.ITEM_TYPE\n * @param {String} id item id\n * \n * @returns {String} detail key\n */\nexport const getDetailKey = (itemType, id) => toUpper(`${itemType}_${id}`)\n\n// detail action creators\nconst detailLoad = (detailKey) => ({\n  type: types.DETAIL_LOAD,\n  detailKey,\n})\n\nconst detailLoadFinish = (detailKey, payload) => ({\n  type: types.DETAIL_LOAD_OK,\n  detailKey,\n  payload,\n})\n\nconst detailLoadError = (detailKey) => ({\n  type: types.DETAIL_LOAD_KO,\n  detailKey,\n})\n\n\nfunction fetchDetail(itemType, id) {\n  const detailKey = getDetailKey(itemType, id)\n  return dispatch => {\n    dispatch(detailLoad(detailKey))\n    return api.Details.byType(itemType, id)\n      .then(response => {\n        const result = response.body\n        dispatch(detailLoadFinish(detailKey, result))\n      }, error => {\n        dispatch(detailLoadError(detailKey))\n      })\n  }\n}\n\nfunction shouldLoadDetail(state, itemType, id) {\n  const detailKey = getDetailKey(itemType, id)\n  const detail = state.detailsByKey[detailKey]\n  if (!detail) {\n    return true\n  } else if (detail.refresh) {\n    return true\n  } else if (detail.error) {\n    return true\n  }\n  return false\n}\n\nexport function fetchDetailIfNeeded(itemType, id) {\n  return (dispatch, getState) => {\n    if (shouldLoadDetail(getState(), itemType, id)) {\n      return dispatch(fetchDetail(itemType, id))\n    }\n  }\n}\n\n\n// search action creators\n/**\n * \n * @param {String} payload - search string\n */\nconst searchLoad = (payload) => ({\n  type: types.SEARCH_LOAD,\n  payload,\n})\n\n/**\n * \n * @param {Array} payload - result array\n */\nconst searchLoadFinish = (payload) => ({\n  type: types.SEARCH_LOAD_OK,\n  payload,\n})\n\nconst searchLoadError = () => ({\n  type: types.SEARCH_LOAD_KO,\n})\n\nexport function fetchSearch(query) {\n  return dispatch => {\n    dispatch(searchLoad(query))\n    return api.Search.multi(query)\n      .then(response => {\n        const result = getSearchResult(response.body)\n        dispatch(searchLoadFinish(result))\n      }, error => {\n        dispatch(searchLoadError())\n      })\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './Loading.module.css'\n\nconst Loading = props => {\n  const { mx , color } = props;\n  const styleColor = {\n    borderColor: `${color} transparent transparent transparent`\n  };\n  return (\n    <div className={styles.loading} style={{ marginTop: mx, marginBottom: mx }}>\n      <div className=\"lds-ring\">\n        <div style={styleColor} />\n        <div style={styleColor} />\n        <div style={styleColor} />\n        <div style={styleColor} />\n      </div>\n    </div>\n  );\n};\n\nLoading.defaultProps = {\n  mx: \"64px\",\n  color: \"#ccc\"\n}\n\nLoading.propTypes = {\n  /** margin x (top and bottom) */\n  mx: PropTypes.string,\n  \n  /** color of the loader */\n  color: PropTypes.string,\n}\n\nexport default Loading\n","import React from 'react'\n\nimport DefaultLoadingComponent from '../components/Loading';\n\n/**\n * withLoading HOC branch on a loading status showing a loading indicator or the client component\n * \n * @param {Function(props<Object>):isLoading<Boolean>} isLoadingFunc - function called with props that return a boolean indicator if should show loading indicator\n * @param {Component} [LoadingComponent]  - optional loading component\n */\nconst withLoading = (isLoadingFunc, LoadingComponent = DefaultLoadingComponent) => Component => props => (\n  <>\n    {isLoadingFunc(props) && <LoadingComponent />}\n    <Component {...props} />\n  </>\n)\n\nexport default withLoading;\n","import React from 'react'\nimport AliceCarousel from 'react-alice-carousel'\nimport \"react-alice-carousel/lib/alice-carousel.css\"\n\n\nconst Carousel = props => {\n  const {items} = props\n\n  const responsive = {\n    0: { items: 4 },\n    600: { items: 6 },\n    1200: { items: 8 },\n  }\n  return (\n    <AliceCarousel\n      items={items}\n      responsive={responsive}\n      autoPlayInterval={2000}\n      autoPlayDirection=\"rtl\"\n      // autoPlay={true}\n      fadeOutAnimation={true}\n      mouseDragEnabled={true}\n      // playButtonEnabled={true}\n      // disableAutoPlayOnAction={true}\n      dotsDisabled={false}\n      buttonsDisabled={true}\n    />\n  )\n}\n\nexport default Carousel","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport PropTypes from 'prop-types'\nimport {withRouter} from 'react-router-dom'\n\nimport style from './MovieCard.module.css'\nimport { getRouteForDetail } from '../configs/routes';\n\nconst MovieCard = props => {\n  const {\n    imageUrl,\n    title,\n    history,\n    itemType,\n    id,\n  } = props\n\n  return (\n    <Card className={`bg-dark text-white ${style.card}`} onClick={e => {\n      history.push(getRouteForDetail(id, itemType))\n    }}>\n      <Card.Img src={imageUrl} alt={title} />\n      <Card.ImgOverlay>\n        <Card.Title>{title}</Card.Title>\n      </Card.ImgOverlay>\n    </Card>\n  )\n}\n\n\nMovieCard.defaultProps = {}\n\nMovieCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default withRouter(MovieCard)\n\n","import React from 'react'\nimport Carousel from './Carousel';\nimport MovieCard from './MovieCard';\nimport { makeImageUrl, IMAGE_POSTER_SIZES } from '../apis';\n\nconst MovieCarousel = props => {\n  const {title, items, configurationTmdb} = props\n  const MoviCardsItems = items.map(item => {\n    // if (!item.title) {\n    //   debugger\n    // }\n    return (\n      <MovieCard\n        imageUrl={makeImageUrl(\n          item.poster_path,\n          IMAGE_POSTER_SIZES.sm,\n          configurationTmdb\n          )\n        }\n        {...item}\n      />\n    )\n  })\n  return (\n    <>\n    <h1>{title}</h1>\n    <Carousel items={MoviCardsItems} />\n    </>\n  )\n}\n\nexport default MovieCarousel","import React from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\n\nimport { fetchListIfNeeded, getListKey } from '../actions';\nimport { compose } from 'recompose';\nimport withLoading from '../hocs/withLoading';\nimport MovieCarousel from '../components/MovieCarousel';\nimport { LIST_TYPES, getListItemFormatter } from '../apis';\n\nclass MovieCarouselContainerBase extends React.Component {\n  componentWillMount() {\n    this.props.onLoad();\n  }\n  render() {\n    return (<MovieCarousel {...this.props} />)\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const {listType, listOptions} = ownProps\n  const listKey = getListKey(listType, listOptions)\n  const listState = state.listsByType[listKey] || {\n    loading: true,\n    error: false,\n    items: []\n  }\n  const formatter = getListItemFormatter(listType)\n  return {\n    error: listState.error,\n    loading: listState.loading,\n    items: listState.items.map(formatter),\n    configurationTmdb: state.common.configuration\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const {listType, listOptions} = ownProps\n  return {\n    onLoad: () => dispatch(fetchListIfNeeded(listType, listOptions)),\n  }\n};\n\nconst MovieCarouselContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoading(props => props.loading)\n)(MovieCarouselContainerBase)\n\nMovieCarouselContainer.defaultProps = {\n  listOptions: {}\n}\n\nMovieCarouselContainer.propTypes = {\n  /** title of the carousel */\n  title: PropTypes.string.isRequired,\n\n  /** type of list to show */\n  listType: PropTypes.oneOf(Object.keys(LIST_TYPES)).isRequired,\n  \n  /** options for the list @see https://developers.themoviedb.org/3/discover/movie-discover */\n  listOptions: PropTypes.object,\n}\n\nexport default MovieCarouselContainer","import React from 'react'\nimport PageContainer from '../components/PageContainer';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport MovieCarouselContainer from '../containers/MovieCarouselContainer';\nimport { LIST_TYPES, GENRES_MOVIE } from '../apis';\n\nconst Home = props => {\n\n  return (\n    <PageContainer>\n      <Container>\n        <Row>\n          <MovieCarouselContainer\n            title={\"Popular movies\"}\n            listType={LIST_TYPES.POPULAR_MOVIES}\n          />\n        </Row>\n        <Row>\n          <MovieCarouselContainer\n            title={\"Popular series\"}\n            listType={LIST_TYPES.POPULAR_SERIES}\n          />\n        </Row>\n        <Row>\n          <MovieCarouselContainer\n            title={\"Family\"}\n            listType={LIST_TYPES.POPULAR_SERIES}\n            listOptions={{genre: GENRES_MOVIE.Family}}\n          />\n        </Row>\n        <Row>\n          <MovieCarouselContainer\n            title={\"Documentary\"}\n            listType={LIST_TYPES.MOVIES_GENRE}\n            listOptions={{genre: GENRES_MOVIE.Documentary}}\n          />\n        </Row>\n      </Container>\n    </PageContainer>\n  )\n}\n\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed'\n\nfunction initPlayer(playerId, videoUrl) {\n  // Create a Player instance.\n  var video = document.getElementById(playerId);\n  var player = new window.shaka.Player(video);\n\n  // Attach player to the window to make it easy to access in the JS console.\n  window.player = player;\n\n  // Listen for error events.\n  player.addEventListener('error', onErrorEvent);\n\n  // Try to load a manifest.\n  // This is an asynchronous process.\n  player.load(videoUrl).then(function() {\n    // This runs if the asynchronous load is successful.\n    console.log('[ShakaPlayer] The video has now been loaded!');\n\n    if (video.requestFullscreen) {\n      console.log('[ShakaPlayer] requesting full screen ...');\n      video.requestFullscreen();\n    } else {\n      console.error('[ShakaPlayer] full screen not available!');\n    }\n  }).catch(onError);  // onError is executed if the asynchronous load fails.\n}\n\nfunction onErrorEvent(event) {\n  // Extract the shaka.util.Error object from the event.\n  onError(event.detail);\n}\n\nfunction onError(error) {\n  // Log the error.\n  console.error('[ShakaPlayer] Error code', error.code, 'object', error);\n}\n\nconst Player = props => {\n  const {id, imageUrl, videoUrl, width} = props\n\n  React.useEffect(()=> {\n    // Install built-in polyfills to patch browser incompatibilities.\n    window.shaka.polyfill.installAll();\n\n    // Check to see if the browser supports the basic APIs Shaka needs.\n    if (window.shaka.Player.isBrowserSupported()) {\n      // Everything looks good!\n      initPlayer(id, videoUrl);\n    } else {\n      // This browser does not have the minimum set of APIs we need.\n      console.error('[ShakaPlayer] Browser not supported!');\n    }\n  }, [id, imageUrl,videoUrl])\n\n  return (\n    <ResponsiveEmbed aspect=\"a16by9\">\n      <video id={id}\n        width={width}\n        poster={imageUrl}\n        controls\n        autoPlay\n      >\n      </video>\n    </ResponsiveEmbed>\n    \n  )\n}\n\nPlayer.defaultProps = {\n  id: \"video\",\n  width: \"640\",\n}\n\nPlayer.propTypes = {\n  /**  */\n  imageUrl: PropTypes.string.isRequired,\n\n  videoUrl: PropTypes.string.isRequired,\n\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  id: PropTypes.string,\n}\n\n\nexport default Player","import React from 'react';\nimport { MdHelpOutline as Icon } from 'react-icons/md';\nimport PropTypes from 'prop-types'\n\nimport './ErrorFullScreen.css';\n\n\n\nconst ErrorFullScreen = props => {\n  const { message } = props;\n  return (\n    <div className=\"container d-flex h-100\">\n      <div className=\" mx-auto align-self-center text-center\">\n        <Icon className=\"m-4\" size=\"6em\" />\n        <h1>\n          {message}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nErrorFullScreen.defaultProps = {\n  message: \"Something went wrong, retry later.\"\n}\n\nErrorFullScreen.propTypes = {\n  message: PropTypes.string.isRequired\n}\n\nexport default ErrorFullScreen;\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport { makeImageUrl, IMAGE_POSTER_SIZES, ITEM_TYPES, MOCK_VIDEO_URL } from '../apis';\nimport { MdPlayCircleFilled } from 'react-icons/md';\nimport Player from './Player';\nimport ErrorFullScreen from './ErrorFullScreen';\n\nfunction formatterMovie({\n  title,\n  poster_path,\n  overview,\n  vote_average,\n  popularity,\n  genres\n}) {\n  return {\n    title,\n    image: poster_path,\n    description: overview,\n    meta: {\n      vote: vote_average,\n      popularity: popularity,\n    }\n  }\n}\nfunction formatterTv({\n  name,\n  poster_path,\n  overview,\n}) {\n  return {\n    title: name,\n    image: poster_path,\n    description: overview,\n    meta: {}\n  }\n}\nconst formaterByType = {\n  [ITEM_TYPES.MOVIE]: formatterMovie,\n  [ITEM_TYPES.TV]: formatterTv\n}\n\nconst Detail = props => {\n  const [playerVisible, setPlayerVisible] = React.useState(false)\n\n  const {item, configurationTmdb, itemType, loading, error} = props\n  \n  if (loading) {\n    // loader visualization is handled by upper HOC\n    return null\n  }\n  \n  if (error) {\n    return <ErrorFullScreen message={\"Item not found\"} />\n  }\n  \n  const {title,description,image,meta} = formaterByType[itemType] ? formaterByType[itemType](item) : item\n  const imageUrl = makeImageUrl(\n    image,\n    IMAGE_POSTER_SIZES.lg,\n    configurationTmdb\n  )\n  return (\n    <>\n    <Modal show={playerVisible} onHide={() => setPlayerVisible(false)} size={\"xl\"}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Player\n          imageUrl={makeImageUrl(\n            image,\n            IMAGE_POSTER_SIZES.sm,\n            configurationTmdb\n          )}\n          videoUrl={MOCK_VIDEO_URL}\n          width={320}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => setPlayerVisible(false)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n    <Container className=\"m-2 pt-2\">\n      <Row>\n        <Col>\n          <h1>{title}</h1>\n\n          <p className=\"lead\">\n            {description}\n          </p>\n          <hr />\n\n          <dl className=\"row\">\n          {Object.keys(meta).map((metaKey,index) => (\n            <React.Fragment key={`meta${index}`}>\n              <dt className=\"col-sm-3\">{metaKey}</dt>\n              <dd className=\"col-sm-9\">{meta[metaKey]}</dd>\n            </React.Fragment>\n          ))}\n          </dl>\n\n          <hr />\n\n          <Button variant=\"primary\" size=\"lg\" block onClick={e => {\n            e.preventDefault()\n            setPlayerVisible(true)\n          }}>\n            <MdPlayCircleFilled /> Play\n          </Button>\n\n        </Col>\n        <Col className=\"align-self-center\"><Image src={imageUrl} thumbnail /></Col>\n      </Row>\n    </Container>\n    </>\n  )\n}\n\nDetail.defaultProps = {\n}\n\nDetail.propTypes = {\n}\n\nexport default Detail\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\n\nimport { fetchDetailIfNeeded, getDetailKey } from '../actions';\nimport { compose } from 'recompose';\nimport withLoading from '../hocs/withLoading';\nimport Detail from '../components/Detail';\nimport { ITEM_TYPES } from '../apis';\n\nclass DetailContainerBase extends React.Component {\n  componentWillMount() {\n    this.props.onLoad();\n  }\n  render() {\n    return (<Detail {...this.props} />)\n  }\n}\n\nfunction getItemTypeFromProps({isTv, isMovie}) {\n  if (isTv) return ITEM_TYPES.TV\n  if (isMovie) return ITEM_TYPES.MOVIE\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const {id} = ownProps\n  const itemType = getItemTypeFromProps(ownProps)\n  const detailKey = getDetailKey(itemType, id)\n  const detailState = state.detailsByKey[detailKey] || {\n    loading: true,\n    error: false,\n    item: {}\n  }\n  return {\n    ...detailState,\n    itemType,\n    configurationTmdb: state.common.configuration\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const {id} = ownProps\n  const itemType = getItemTypeFromProps(ownProps)\n  return {\n    onLoad: () => dispatch(fetchDetailIfNeeded(itemType, id)),\n  }\n};\n\nconst DetailContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoading(props => props.loading)\n)(DetailContainerBase)\n\nDetailContainer.defaultProps = {}\n\nDetailContainer.propTypes = {\n  /**  */\n  id: PropTypes.string.isRequired,\n\n  isTv: PropTypes.bool,\n  isMovie: PropTypes.bool,\n}\n\nexport default DetailContainer","import React from 'react'\nimport get from 'lodash/get'\nimport PageContainer from '../components/PageContainer';\nimport DetailContainer from '../containers/DetailContainer';\n\nconst Details = props => {\n  const {match, isTv, isMovie} = props\n  const id = get(match, 'params.id')\n\n  return (\n    <PageContainer>\n      <DetailContainer isTv={isTv} isMovie={isMovie} id={id} />\n    </PageContainer>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport isEmpty from 'lodash/isEmpty'\n\nimport PropTypes from 'prop-types'\nimport { MdSearch } from 'react-icons/md';\nimport MovieCard from './MovieCard';\nimport { IMAGE_POSTER_SIZES, makeImageUrl } from '../apis';\n\nconst Search = props => {\n  const {keyword, query, loading, results, fetchSearch, configurationTmdb} = props\n  const [searchValue, setSearchValue] = React.useState(keyword || query)\n\n  const MoviCardsItems = results ? results\n    .filter(item => item.poster_path && item.title)\n    .map(item => {\n    return (\n      <MovieCard\n        imageUrl={makeImageUrl(\n          item.poster_path,\n          IMAGE_POSTER_SIZES.sm,\n          configurationTmdb\n          )\n        }\n        {...item}\n      />\n    )\n  }) : null\n\n  return (\n    <Container className=\"mt-4\">\n      <Row className=\"mt-4\">\n        <Col>\n          <h1>Search</h1>\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <Form onSubmit={e => {\n            e.preventDefault()\n            fetchSearch(searchValue)\n          }}>\n            <Form.Row>\n              <Col sm={10}>\n                <Form.Control autoFocus placeholder=\"search movies and tv series titles\" value={searchValue} onChange={e => {\n                  setSearchValue(e.target.value)\n                }}/>\n              </Col>\n              <Col sm={2}>\n                <Button disabled={loading || isEmpty(searchValue)} block variant=\"primary\" type=\"submit\">\n                  {loading && \n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                  }\n                  {!loading && <MdSearch />}\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CardColumns>\n            {MoviCardsItems}\n          </CardColumns>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nSearch.defaultProps = {\n  keyword: \"\",\n  query: \"\",\n  results: [],\n}\n\nSearch.propTypes = {\n  /** query from url for sharing search result */\n  keyword: PropTypes.string,\n\n  error: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  \n  /** searched query from reducer for result */\n  query: PropTypes.string,\n\n  results: PropTypes.array,\n\n  fetchSearch: PropTypes.func,\n}\n\nexport default Search","import { connect } from 'react-redux';\n\nimport { fetchSearch } from '../actions';\nimport { compose } from 'recompose';\nimport Search from '../components/Search';\n\nconst mapStateToProps = (state) => {\n  const searchState = state.search\n\n  return {\n    ...searchState,\n    configurationTmdb: state.common.configuration\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchSearch: (query) => dispatch(fetchSearch(query)),\n  }\n};\n\nconst SearchContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(Search)\n\nexport default SearchContainer","import React from 'react'\nimport get from 'lodash/get'\nimport PageContainer from '../components/PageContainer';\nimport SearchContainer from '../containers/SearchContainer';\n\nconst Search = props => {\n  const {match} = props\n  const keyword = get(match, 'params.keyword')\n\n  return (\n    <PageContainer>\n      <SearchContainer keyword={keyword} />\n    </PageContainer>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport ErrorFullScreen from '../components/ErrorFullScreen';\nimport PageContainer from '../components/PageContainer';\n\nconst NotFound = props => {\n  const { location = {} } = props;\n  return (\n    <PageContainer containerClassName=\"fullscreen\" rowClassName=\"fullscreen\">\n      <ErrorFullScreen message={`Object not found for ${location.pathname}`} />\n    </PageContainer>\n  )\n}\n\nexport default NotFound","import React from 'react'\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom'\n\nimport routes from '../configs/routes';\nimport Home from '../screens/Home';\nimport Details from '../screens/Details';\nimport Search from '../screens/Search';\nimport NotFound from '../screens/NotFound';\n\n\nconst App = props => {\n  return (\n      <Router>\n        <Switch>\n          <Route exact path={[routes.SEARCH, routes.SEARCHKEYWORD]} component={Search} />\n          \n          <Route exact path={routes.DETAILMOVIE} render={props => <Details {...props} isMovie />} />\n          <Route exact path={routes.DETAILTV} render={props => <Details {...props} isTv />} />\n          <Route exact path={routes.HOME} component={Home} />\n\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App","import React from 'react'\nimport { connect } from 'react-redux';\n\nimport App from '../components/App';\nimport { fetchConfigurationIfNeeded } from '../actions';\nimport { compose } from 'recompose';\nimport withLoading from '../hocs/withLoading';\n\nclass AppContainer extends React.Component {\n  componentWillMount() {\n    this.props.onLoad();\n  }\n  render() {\n    const {error, loading} = this.props\n    return (<App error={error} loading={loading} />)\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.common.error,\n  loading: state.common.loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onLoad: () => dispatch(fetchConfigurationIfNeeded()),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoading(props => props.loading)\n)(AppContainer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport configureStore from './configureStore'\n\n// import bootrap css before importing my components so bootstrap get less priority\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport AppContainer from './containers/AppContainer';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}